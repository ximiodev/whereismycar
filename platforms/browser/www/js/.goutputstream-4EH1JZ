var map;
var mapmini;
var marker;
var markermini;
var lastPosition = {};
var pictureSource;   // picture source
var geocoder;
var directionsService;
var directionsDisplay;
var destinationType; // sets the format of returned value 
var connectionStatus = false;

var app = document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1;

if (app) {
	document.addEventListener("deviceready",onDeviceReady,false);
} else {
	//~ ponerPantalla("pantalalSinCon");
}


function onDeviceReady() {
	pictureSource=navigator.camera.PictureSourceType;
	destinationType=navigator.camera.DestinationType;
	connectionStatus = navigator.onLine;
	
	if(window.localStorage.getItem('ultimoest')!='' && window.localStorage.getItem('ultimoest')!=null) {
		lastPosition = JSON.parse(window.localStorage.getItem('ultimoest'));
	}
	
	if(connectionStatus) {
	
		if(lastPosition.calle!=undefined) {
			//~ $('.btnMarcar').addClass('hidden');
			//~ $('.btnBuscar').removeClass('hidden');
		}
		//~ ponerPantalla("pantallaConMapa");
		//iniciarmapa
		geocoder = new google.maps.Geocoder;
		directionsService = new google.maps.DirectionsService;
		directionsDisplay = new google.maps.DirectionsRenderer;
		navigator.geolocation.getCurrentPosition(onSuccessPos, onErrorPos);
		
	} else {
		if(lastPosition.calle!=undefined) {
			//~ $('.btnMarcar').addClass('hidden');
			//~ $('.btnBuscar').removeClass('hidden');
		}
		//~ ponerPantalla("pantalalSinCon");
	}
		

	try {
		checkAvailability(); // start the check
	} catch(e) {
		//~ alert(e);
	}

}

var imageIconna = {
    url: 'images/pinNar_32.png',
    size: new google.maps.Size(32, 32),
    origin: new google.maps.Point(0, 0),
    anchor: new google.maps.Point(0, 32)
};
var shape = {
	coords: [1, 1, 1, 20, 18, 20, 18, 1],
	type: 'poly'
};

var onSuccessPos = function(position) {
	//~ initMapa(position.coords.latitude, position.coords.longitude);
	var noPoi = [
	{
		featureType: "poi",
		stylers: [
		  { visibility: "off" }
		]   
	  }
	];

	var myLatLng = {lat: lat, lng: lng};
	mapmini = new google.maps.Map(document.getElementById('map_canvas'), {
	  center: myLatLng,
	  mapTypeControl: false,
	  streetViewControl: false,
	  zoomControl: false,
	  fullscreenControl: false,
	  zoom: 18
	});
	//~ mapmini.setOptions({styles: noPoi});
	
	map = new google.maps.Map(document.getElementById('captureMod'), {
	  center: myLatLng,
	  mapTypeControl: false,
	  streetViewControl: false,
	  zoomControl: false,
	  fullscreenControl: false,
	  zoom: 18
	});
	map.setOptions({styles: noPoi});
	lastPosition['lat'] = position.coords.latitude;
	lastPosition['lng'] = position.coords.longitude;
};

function placeMarker(location) {
	if(marker) marker.setMap(null);
	
	lastPosition['lat'] = location.lat;
	lastPosition['lng'] = location.lng;
    marker = new google.maps.Marker({
        position: location, 
		icon: imageIconna,
        map: map,
		title: 'Estacionaste ac치!'
    });
	setCalle({lat: location.lat, lng: location.lng}, setModalCalle);
}

function initMapa(lat, lng) {
	
	google.maps.event.addListener(map, 'click', function(event) {
	   placeMarker(event.latLng);
	});
	directionsDisplay.setMap(map);
	
	marker = new google.maps.Marker({
		position: myLatLng,
		map: map,
		icon: imageIconna,
		title: 'Estacionaste ac치!'
	});
	
	
	var count = 0;
	for (var k in lastPosition) {
		if (lastPosition.hasOwnProperty(k)) {
		   ++count;
		}
	}
	if(count>0) {
		mostrarControlesBuscar();
	} else {
		mostrarControlesNuevo();
	}
}

function ponerModalsB(pant) {
	var activos = $('.modalVent.activo').length;
	if(activos>0) {
		$('.modalVent.activo').animate( {left: "100%"},300, function() {
			$('.modalVent.activo').removeClass('activo');
			$('.'+pant).animate( {left: "0%"},300, function() {
				$('.'+pant).addClass('activo');
			});
		});
	} else {
		$('.'+pant).animate( {left: "0%"},300, function() {
			$('.'+pant).addClass('activo');
		});
	}	
}

function sacarModalVent() {
	$('.modalVent.activo').animate( {left: "100%"},300, function() {
		$('.modalVent.activo').removeClass('activo');
	});
}

function ponerPantalla(pantid) {
	$('.pantallaApp').addClass('hidden');
	$('#'+pantid).removeClass('hidden');
}

function getCoordOfImg(img) {
	lastPosition['img'] = img;
	window.resolveLocalFileSystemURL(img,
		function(entry) {
			entry.file(function(file) {
				EXIF.getData(file, function() {
					var lat = EXIF.getTag(this, "GPSLatitude");
					var lon = EXIF.getTag(this, "GPSLongitude");

					//Convert coordinates to WGS84 decimal
					var latRef = EXIF.getTag(this, "GPSLatitudeRef") || "N";  
					var lonRef = EXIF.getTag(this, "GPSLongitudeRef") || "W";  
					lat = (lat[0] + lat[1]/60 + lat[2]/3600) * (latRef == "N" ? 1 : -1);  
					lon = (lon[0] + lon[1]/60 + lon[2]/3600) * (lonRef == "W" ? -1 : 1); 
					
					try {
						if(marker) marker.setMap(null);
					
						var myLatLng = {lat: lat, lng: lon};
						lastPosition['lat'] = lat;
						lastPosition['lng'] = lon;
						ponermodalPos(lat,lon);
						marker = new google.maps.Marker({
							position: myLatLng,
							map: map,
							title: 'Estacionaste ac치!'
						});
					} catch(e) {
						alert(e.message);
					}
				});
			}, onFail);
		},
		function(e) {
		alert('Unexpected error obtaining image file.');
		onFail(e);
	});
}

function mostrarModal(titulo, cuerpo, pie) {
	$('.modalTitulo').html(titulo);
	$('.modalCuerpo').html(cuerpo);
	$('.modalPie').html(pie);
}


function setCalle(latlng, callback) {
	geocoder.geocode({'location': latlng}, function(results, status) {
	  if (status === 'OK') {
		if (results[1]) {
		  callback(results[0].formatted_address);
		} else {
		  callback('');
		}
	  } else {
		callback('');
	  }
	});
}

function setModalCalle(nombreCa) {
	$('#osbervacionesC').val(nombreCa);
	lastPosition['calle'] = nombreCa;
}

function onPhotoDataSuccess(imageData) {
  var smallImage = document.getElementById('smallImage');
  smallImage.style.display = 'block';
  smallImage.src = "data:image/jpeg;base64," + imageData;
}

function ponerPinMapa(elmapa, elmarker,lat,lng, mensaje) {
	var myLatLng = {lat: lat, lng: lng};
	
	elmarker = new google.maps.Marker({
		position: myLatLng,
		icon: imageIconna,
		map: elmapa,
		title: mensaje
	});
}

function guardarNotasExtra() {
    lastPosition['notasExtra'] = $('#textoextra').val();
    $('.notasExtra').html(lastPosition['notasExtra']);
    $('.ventanaparatexto').animate( {left: "-105%"},300);
}

function mostrarCajaTexto() {
    $('.ventanaparatexto').animate( {left: "5%"},500);
}

function cerrarModal(quien) {
   $(quien).animate( {top: "-120vh"},300);
}

function guardarCurrentEst() {
	window.localStorage.setItem('ultimoest', JSON.stringify(lastPosition));
	ocultarControlesNuevo();
	mostrarControlesBuscar();
	cerrarModal('.modalVentana');
}

function ocultarControlesNuevo() {
	$('#usePosition').animate( {bottom: "-250px"},500);
	$('#takePhotoPos').animate( {bottom: "-100px"},500);
}

function mostrarControlesNuevo() {
	$('#usePosition').animate( {bottom: "20px"},500);
	$('#takePhotoPos').animate( {bottom: "40px"},500);
}

function ocultarControlesBuscar() {
	$('#findCar').animate( {bottom: "-250px"},500);
	$('#discardEst').animate( {bottom: "-100px"},500);
}

function mostrarControlesBuscar() {
	$('#findCar').animate( {bottom: "20px"},500);
	$('#discardEst').animate( {bottom: "40px"},500);
}

function discardEst() {
	ocultarControlesBuscar();
	directionsDisplay.setMap(null);
	marker.setMap(null);
	mostrarControlesNuevo();
	lastPosition= {};
	navigator.geolocation.getCurrentPosition(onSuccessPos, onErrorPos);
	window.localStorage.setItem('ultimoest', JSON.stringify(lastPosition));
}

function useCurrentPos() {
	var lat, lng;
	if(app) {
		marker.setMap(null);
		
		ponerPinMapa(map, marker,lastPosition['lat'], lastPosition['lng'], 'Estacionaste ac치!');
		ponermodalPos(lastPosition['lat'], lastPosition['lng']);
	} else {
		if(marker) marker.setMap(null);
		ponerPinMapa(map, marker,-34.541946,-58.491228);
		ponermodalPos(-34.541946,-58.491228);
	}
}

function onPhotoFileSuccess(imageData) {
  //~ var smallImage = document.getElementById('smallImage');
  //~ smallImage.style.display = 'block';
  //~ smallImage.src = imageData;
  getCoordOfImg(imageData);
}

function ponerFotoExtra() {
	navigator.camera.getPicture(ponerMiniFotoExtra, onFail, { quality: 50, destinationType: Camera.DestinationType.FILE_URI,correctOrientation: true });
}

function ponerMiniFotoExtra(imageData) {
  $('.fotoExtra').html('<img src="'+imageData+'" class="imgSmallExtra">');
  lastPosition['img'] = imageData;
}

function capturePhotoWithFile() {
	navigator.camera.getPicture(onPhotoFileSuccess, onFail, { quality: 50, destinationType: Camera.DestinationType.FILE_URI,correctOrientation: true });
}

// onError Callback receives a PositionError object
//
function onErrorPos(error) {
    alert('La  geolocalizacion no funciona. code: '    + error.code    + '\n' + 'message: ' + error.message + '\n');
}


function onFail(message) {
  alert('Failed because: ' + message);
}


function ponerTexto(texto) {
	var parentElement = document.getElementById('contenido');
	parentElement.innerHTML = texto;
}

/* Sin coneccion*/

function sacarFotoSinco() {
	navigator.camera.getPicture(onSacaFotoSinco, onFailSincoFo, { quality: 50, destinationType: Camera.DestinationType.FILE_URI,correctOrientation: true });
}

function iniciarConFotoSC() {
	ponerModalsB("modalNuevoEstaSinco");
	navigator.camera.getPicture(onSacaFotoSinco, onFailSincoFo, { quality: 50, destinationType: Camera.DestinationType.FILE_URI,correctOrientation: true });
}

function estSincon() {
	ponerModalsB('modalNuevoEstaSinco');
}

function encSincon() {
	$('#calleSC_c').html(lastPosition['calle']);
	$('#pisoSC_c').html(lastPosition['piso']);
	$('#osbervacionesSC_c').html(lastPosition['osbervaciones']);
	if(lastPosition['img']!=undefined) $('.fotoExtraSinco_c').html('<img src="'+lastPosition['img']+'" class="imgSmallExtra">');
	ponerModalsB('modalEstaSinco');
}

function verHist() {
	ponerModalsB('modalHist');
}

function verConfig() {
	ponerModalsB('modalConfig');
}

function cancelarSinco() {
	sacarModalVent();
}

function comenzarSinCon() {
	sacarModalVent();
}

function onFailSincoFo(message) {
  alert('Fallo. Error: ' + message);
}

function onPhotoFileSuccess(imageData) {
	getCoordOfImg(imageData);
}

function borrarEstacionamiento() {
	lastPosition = {};
	window.localStorage.setItem('ultimoest', JSON.stringify(lastPosition));
	sacarModalVent();
}

function backMenu() {
	sacarModalVent();
}

function guardarSinco() {
	lastPosition['tipo'] = 'SC';
	lastPosition['lat'] = '';
	lastPosition['lng'] = '';
	lastPosition['calle'] = $('#calleSC').val();
	lastPosition['piso'] = $('#pisoSC').val();
	lastPosition['osbervaciones'] = $('#osbervacionesSC').val();
	$('#calleSC').val('');
	$('#osbervacionesSC').val('');
	$('#pisoSC').val('');
	$('.fotoExtraSinco_c').html('');
	window.localStorage.setItem('ultimoest', JSON.stringify(lastPosition));
	$('.btnMarcar').addClass('hidden');
	$('.btnBuscar').removeClass('hidden');
	
	sacarModalVent();
}

function onSacaFotoSinco(img) {
	lastPosition['img'] = img;
	window.resolveLocalFileSystemURL(img,
		function(entry) {
			entry.file(function(file) {
				EXIF.getData(file, function() {
					var lat = EXIF.getTag(this, "GPSLatitude");
					var lon = EXIF.getTag(this, "GPSLongitude");

					//Convert coordinates to WGS84 decimal
					var latRef = EXIF.getTag(this, "GPSLatitudeRef") || "N";  
					var lonRef = EXIF.getTag(this, "GPSLongitudeRef") || "W";  
					lat = (lat[0] + lat[1]/60 + lat[2]/3600) * (latRef == "N" ? 1 : -1);  
					lon = (lon[0] + lon[1]/60 + lon[2]/3600) * (lonRef == "W" ? -1 : 1); 
					
					try {
						$('.fotoExtraSinco').html('<img src="'+lastPosition['img']+'" class="imgSmallExtra">');
					} catch(e) {
						alert(e.message);
					}
				});
			}, onFail);
		},
		function(e) {
		alert('Unexpected error obtaining image file.');
		onFail(e);
	});
}

/* con coneccion*/

function estConcon () {
	try {
		ponerModalsB("modalNuevoEstaCo");
		if(connectionStatus) {
			$('#modalNuevoEstaCo .tituloModal').html('ESTACIONAR');
			var lat = lastPosition['lat'];
			var lng = lastPosition['lng'];
			
			var myLatLng = {lat: lat, lng: lng};
			
			google.maps.event.addListener(map, 'click', function(event) {
			   placeMarker(event.latLng);
			});
			directionsDisplay.setMap(map);
			
			marker = new google.maps.Marker({
				position: myLatLng,
				map: map,
				icon: imageIconna,
				title: 'Estacionaste ac치!'
			});
			
			setCalle({lat: lat, lng: lng}, setModalCalle);
		} else {
			$('#modalNuevoEstaCo .tituloModal').html('SIN CONEXI칍N');
		}
	} catch(e) {
		alert(e);
	}
}



function encConcon() {
	//~ directionsDisplay.setMap(null);
	if(marker) marker.setMap(null);
	//~ directionsDisplay.setMap(map);
	directionsDisplay.setMap(mapmini);
	navigator.geolocation.getCurrentPosition(function (position) {
		if(marker) marker.setMap(null);
		directionsService.route({
		  origin: ''+position.coords.latitude+','+position.coords.longitude,
		  destination: ''+lastPosition['lat']+','+lastPosition['lng'],
		  optimizeWaypoints: true,
		  travelMode: 'WALKING'
		}, function(response, status) {
		  if (status === 'OK') {
			  
			try {
				directionsDisplay.setDirections(response);
			} catch(e) {
				alert(e.message);
			}
		  } else {
			alert('Directions request failed due to ' + status);
		  }
		});
	});
}

function sacarFotoCo() {
	navigator.camera.getPicture(onSacaFotoCo, onFailSincoFo, { quality: 50, destinationType: Camera.DestinationType.FILE_URI,correctOrientation: true });
}

function iniciarConFotoCo() {
	ponerModalsB("modalNuevoEstaCo");
	navigator.camera.getPicture(onSacaFotoCo, onFailSincoFo, { quality: 50, destinationType: Camera.DestinationType.FILE_URI,correctOrientation: true });
}

function guardarCo() {
	lastPosition['tipo'] = 'C';
	lastPosition['osbervaciones'] = $('#osbervacionesSC').val();
	$('#osbervacionesC').val('');
	$('.fotoExtraSinco_c').html('');
	window.localStorage.setItem('ultimoest', JSON.stringify(lastPosition));
	$('.btnMarcar').addClass('hidden');
	$('.btnBuscar').removeClass('hidden');
	
	sacarModalVent();
}

function onSacaFotoCo(img) {
	lastPosition['img'] = img;
	window.resolveLocalFileSystemURL(img,
		function(entry) {
			entry.file(function(file) {
				EXIF.getData(file, function() {
					var lat = EXIF.getTag(this, "GPSLatitude");
					var lon = EXIF.getTag(this, "GPSLongitude");

					//Convert coordinates to WGS84 decimal
					var latRef = EXIF.getTag(this, "GPSLatitudeRef") || "N";  
					var lonRef = EXIF.getTag(this, "GPSLongitudeRef") || "W";  
					lat = (lat[0] + lat[1]/60 + lat[2]/3600) * (latRef == "N" ? 1 : -1);  
					lon = (lon[0] + lon[1]/60 + lon[2]/3600) * (lonRef == "W" ? -1 : 1); 
					
					try {
						$('.fotoExtraCo').html('<img src="'+lastPosition['img']+'" class="imgSmallExtra">');
					} catch(e) {
						alert(e.message);
					}
				});
			}, onFail);
		},
		function(e) {
		alert('Unexpected error obtaining image file.');
		onFail(e);
	});
}

/* */

interact('.resize-drag')
  .resizable({
    // resize from all edges and corners
    edges: { left: false, right: false, bottom: true, top: false },

    // keep the edges inside the parent
    restrictEdges: {
      outer: 'parent',
      endOnly: true,
    },

    // minimum size
    restrictSize: {
      min: { height: 50 },
      max: { height: 450 },
    },

    inertia: true,
  });

/* validacion de gps*/

function checkAvailability(){
    cordova.plugins.diagnostic.isGpsLocationAvailable(function(available){
        console.log("GPS location is " + (available ? "available" : "not available"));
        if(!available){
           checkAuthorization();
        }else{
            console.log("GPS location is ready to use");
        }
    }, function(error){
        console.error("The following error occurred: "+error);
    });
}

function checkAuthorization(){
    cordova.plugins.diagnostic.isLocationAuthorized(function(authorized){
        console.log("Location is " + (authorized ? "authorized" : "unauthorized"));
        if(authorized){
            checkDeviceSetting();
        }else{
            cordova.plugins.diagnostic.requestLocationAuthorization(function(status){
                switch(status){
                    case cordova.plugins.diagnostic.permissionStatus.GRANTED:
                        console.log("Permission granted");
                        checkDeviceSetting();
                        break;
                    case cordova.plugins.diagnostic.permissionStatus.DENIED:
                        console.log("Permission denied");
                        // User denied permission
                        break;
                    case cordova.plugins.diagnostic.permissionStatus.DENIED_ALWAYS:
                        console.log("Permission permanently denied");
                        // User denied permission permanently
                        break;
                }
            }, function(error){
                console.error(error);
            });
        }
    }, function(error){
        console.error("The following error occurred: "+error);
    });
}

function checkDeviceSetting(){
    cordova.plugins.diagnostic.isGpsLocationEnabled(function(enabled){
        console.log("GPS location setting is " + (enabled ? "enabled" : "disabled"));
        if(!enabled){
            cordova.plugins.locationAccuracy.request(function (success){
                console.log("Successfully requested high accuracy location mode: "+success.message);
            }, function onRequestFailure(error){
                console.error("Accuracy request failed: error code="+error.code+"; error message="+error.message);
                if(error.code !== cordova.plugins.locationAccuracy.ERROR_USER_DISAGREED){
                    if(confirm("Failed to automatically set Location Mode to 'High Accuracy'. Would you like to switch to the Location Settings page and do this manually?")){
                        cordova.plugins.diagnostic.switchToLocationSettings();
                    }
                }
            }, cordova.plugins.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY);
        }
    }, function(error){
        console.error("The following error occurred: "+error);
    });
}
